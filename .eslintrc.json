{
    "env": {
        "node": true,
        "browser": true,
        "es6": true
    },
    "parser": "babel-eslint",
    "parserOptions": {
        "ecmaVersion": 7,
        "ecmaFeatures": {
            "jsx": true
        },
        "allowImportExportEverywhere": false
    },
    "settings": {
        "react": {
            "pragma": "React",
            "version": "15.0"
        }
    },
    "plugins": ["react", "babel"],
    "rules": {
     // possible errors
        "no-cond-assign": "error",
        "no-console": "error",
        "no-constant-condition": "error",
        "no-dupe-args": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-parens": "warn",
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-inner-declarations": "error",
        "no-irregular-whitespace": "error",
        "no-negated-in-lhs": "error",
        "no-unexpected-multiline": "error",
        "valid-typeof": "error",
     // best practices
        "array-callback-return": "error",
        "consistent-return": "error",
        "curly": ["error", "multi-line"],
        "default-case": "error",
        "dot-notation": "error",
        "eqeqeq": ["error", "always"],
        "no-else-return": "error",
        "no-eq-null": "error",
        "no-extra-label": "error",
        "no-lone-blocks": "error",
        "no-multi-spaces": ["error", {"exceptions": {"VariableDeclarator": true }}],
        "no-native-reassign": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-param-reassign": "error",
        "no-redeclare": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-useless-concat": "error",
        "no-useless-escape": "error",
        "yoda": "error",
    // variables
        "init-declarations": ["error", "always"],
        "no-delete-var": "error",
        "no-undef-init": "error",
        "no-undef": "error",
        "no-undefined": "error",
        "no-unused-vars": "error",
        "no-use-before-define": "error",
    // nodejs and commonjs
        "callback-return": "error",
        "global-require": "error",
        "no-mixed-requires": "error",
        "no-new-require": "error",
    // stylistic issues
        "block-spacing": ["error", "always"],
        "brace-style": ["error", "1tbs"],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "func-style": ["error", "declaration", {"allowArrowFunctions": true}],
        "indent": ["error", 4],
        "jsx-quotes": ["error", "prefer-double"],
        "keyword-spacing": ["error", {"after": true, "overrides": {"if": {"after": false}, "switch": {"after": false}, "catch": {"after": false}, "for": {"after": false}}}],
        "linebreak-style": ["error", "unix"],
        "new-cap": ["error", {"newIsCap": true}],
        "new-parens": "error",
        "no-lonely-if": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-multiple-empty-lines": ["error", {"max": 2, "maxEOF": 1}],
        "no-spaced-func": "error",
        "no-trailing-spaces": "error",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "operator-assignment": ["error", "always"],
        "quote-props": ["error", "consistent-as-needed"],
        "semi-spacing": "error",
        "space-before-function-paren": ["error", "never"],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        "spaced-comment": ["error", "always"],
        "unicode-bom": ["error", "never"],
        "wrap-regex": "error",
    // ES6
        "arrow-body-style": ["error", "as-needed"],
        "arrow-spacing": "error",
        "constructor-super": "error",
        "no-class-assign": "error",
        "no-confusing-arrow": "error",
        "no-const-assign": "error",
        "no-dupe-class-members": "error",
        "no-duplicate-imports": "error",
        "no-new-symbol": "error",
        "no-this-before-super": "error",
        "no-useless-computed-key": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "rest-spread-spacing": ["error", "never"],
        "template-curly-spacing": ["error", "never"],
    // react plugin -- React
        "react/no-deprecated": "error",
        "react/no-direct-mutation-state": "error",
        "react/no-unknown-property": "error",
        "react/prefer-es6-class": ["error", "always"],
        "react/prefer-stateless-function": "error",
        "react/require-render-return": "error",
        "react/self-closing-comp": ["error", {"component": true, "html": false}],
        "react/sort-comp": "error",
        "react/wrap-multilines": "error",
    // react plugin -- JSX
        "react/jsx-boolean-value": ["error", "always"],
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-curly-spacing": ["error", "never"],
        "react/jsx-equals-spacing": ["error", "never"],
        "react/jsx-handler-names": "error",
        "react/jsx-indent": ["error", 4],
        "react/jsx-key": "error",
        "react/jsx-no-duplicate-props": ["error", {"ignoreCase": true}],
        "react/jsx-no-undef": "error",
        "react/jsx-space-before-closing": ["error", "always"],
        "react/jsx-uses-vars": "error",
        "react/jsx-uses-react": "error",
    // eslint-plugin-babel overrides
        "babel/generator-star-spacing": "error",
        "babel/array-bracket-spacing": ["error", "never", {"objectsInArrays": false}],
        "babel/object-curly-spacing": "error",
        "babel/object-shorthand": ["error", "always"],
        "babel/arrow-parens": ["error", "as-needed"],
        "babel/no-await-in-loop": "error",
        "babel/flow-object-type": ["error", "comma"],
        "babel/func-params-comma-dangle": "error"
    }
}